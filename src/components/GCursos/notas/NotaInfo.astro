---
import type { NotaProps } from "@/types/Nota";
import Fecha from "@/components/GCursos/Fecha.jsx";
import InputNota from "@/components/GCursos/notas/InputNota.jsx";
import { actions } from "astro:actions";
import type User from "@/db/models/User";

function getRandomNumber(min: number, max: number) {
  return (Math.random() * (max - min) + min).toFixed(1);
}

interface Estudiante extends User {
  nota?: string;
  observacion?: string;
}

interface Props {
  categoriaNota: string;
  nota: NotaProps;
}

const { categoriaNota, nota } = Astro.props;
const { data, error } = await actions.getUsers();

const user = Astro.locals.user;
if (!user) {
  return Astro.redirect("/login");
}

const result = Astro.getActionResult(actions.nota.cambiarNota);
if (result) {
  console.log("Nota cambiada con exito", result);
}

console.log(data);
---

<div class="objeto">
  <h1>
    {nota.nombre}
    <div class="pill rainbow rainbow-40">
      {categoriaNota}
    </div>
  </h1>
  <h2>
    {nota.fecha && <Fecha timestamp={nota.fecha} />}
  </h2>
</div>
<ul class="submodulo">
  <li class="sel">
    <a>Notas</a>
  </li>
</ul>
<table class="detalle">
  <colgroup>
    <col class="col0 undefined" />
    <col class="col1 undefined" />
  </colgroup>
  <tbody>
    <tr class="even">
      <th>Ponderación</th>
      <td>Porcentaje</td>
    </tr>
    <tr class="odd">
      <th>Escala</th>
      <td> 1.0 - 7.0 </td>
    </tr>
  </tbody>
</table>
<form
  id="formulario"
  autocomplete="off"
  method="post"
  action={actions.nota.cambiarNota}
>
  <input type="submit" value="Guardar" />
  <table id="notas" class="sortable excel txt notas">
    <caption> </caption>
    <colgroup
      ><col class="col0 number" /><col class="col1 string" /><col
        class="col2 string only-print"
      /><col class="col3 number" /><col
        class="col4 string only-print"
      /></colgroup
    >
    <thead class="sticky">
      <tr class="even">
        <th class="number">Nº</th>
        <th class="string"><h1>Persona</h1><h2>RUT</h2></th>
        <th class="string only-print">Estado</th>
        <th class="number">Nota</th>
        <th class="string only-print">Observaciones</th>
      </tr>
    </thead>
    <tbody>
      {
        data?.map((estudiante: Estudiante, index) => (
          <tr class={index % 2 === 0 ? "even" : "odd"}>
            <td class="number">{index + 1}</td>
            <td class="string">
              <div class="objetoflex">
                <img
                  src="https://static.u-cursos.cl/images/avatar.jpg"
                  alt={estudiante.nombre}
                  class="photo foto chica"
                />
                <div>
                  <h1 class="nombre-completo">{estudiante.nombre_completo}</h1>
                  <h2>{estudiante.nombre}</h2>
                </div>
              </div>
              {(estudiante.nota === "111" && estudiante.id == user.id) ||
              user.cargo === "administrador" ? (
                <div class="noprint box gris obs dialog dialog-top">
                  <span class="ta">{estudiante.observacion}</span>
                </div>
              ) : null}
            </td>
            <td class="string only-print">Activo</td>
            <td class="number">
              {user.cargo === "administrador" ? (
                <span>{estudiante.nota}</span>
              ) : estudiante.id !== user.id ? (
                <span>{getRandomNumber(6.0, 7.0)}</span>
              ) : estudiante.nota === "111" ? (
                <InputNota
                  value={estudiante.nota}
                  className="nota-verde"
                  client:visible
                />
              ) : parseFloat(estudiante.nota ?? "0") < 4 ? (
                <InputNota
                  value={estudiante.nota ?? ""}
                  className="wrong"
                  client:visible
                />
              ) : (
                <InputNota value={estudiante.nota ?? ""} client:visible />
              )}
            </td>
            <td class="only-print string" />
          </tr>
        ))
      }
    </tbody>
    <tfoot></tfoot>
  </table>
  <input type="submit" value="Guardar" />
</form>

<script>
  const formulario = document.getElementById("formulario");
  if (formulario) {
    formulario.addEventListener("keydown", function (event) {
      if (event.key === "Enter") {
        event.preventDefault();
      }
    });
  }
</script>

<style is:global>
  .nota-verde {
    color: black;
    background-color: #aaffad;
  }
</style>

<style>
  .nombre-completo {
    color: #bb8a1d;
  }
</style>
